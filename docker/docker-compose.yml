version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../downloads:/app/downloads
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=natal_prefeitura
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: python main.py --api-only
  
  # Este serviço executa o scraping e depois para.
  scraper:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ../downloads:/app/downloads
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=natal_prefeitura
    depends_on:
      db:
        condition: service_healthy
    # O comando padrão do Dockerfile (python main.py) será executado
    
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=natal_prefeitura
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: